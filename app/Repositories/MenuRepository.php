<?php

namespace App\Repositories;

use A17\Twill\Repositories\Behaviors\HandleSlugs;
use A17\Twill\Repositories\Behaviors\HandleRevisions;
use A17\Twill\Repositories\ModuleRepository;
use App\Models\Menu;
use Carbon\Carbon;

class MenuRepository extends ModuleRepository
{
    use HandleSlugs, HandleRevisions;

    public function __construct(Menu $model)
    {
        $this->model = $model;
    }

    public function afterSave($object, $fields)
    {
        $this->updateBrowser($object,$fields,'days');

        $fields['date'] = Carbon::create($fields['date'])->startOfWeek()->format('Y-m-d');

        parent::afterSave($object, $fields); // TODO: Change the autogenerated stub
    }

    public function beforeSave($object, $fields)
    {
        $fields['date'] = Carbon::create($fields['date'])->startOfWeek()->format('Y-m-d');

        parent::beforeSave($object, $fields); // TODO: Change the autogenerated stub
    }

    public function prepareFieldsBeforeSave($object, $fields)
    {
        $fields['date'] = Carbon::create($fields['date'])->startOfWeek()->format('Y-m-d');

        return parent::prepareFieldsBeforeSave($object, $fields); // TODO: Change the autogenerated stub
    }

    public function getFormFields($object) {

        // don't forget to call the parent getFormFields function
        $fields = parent::getFormFields($object);

        $fields['browsers']['days'] = $this->getFormFieldsForBrowser($object, 'days',null,'date');
        clock($fields);

        $fields['date'] = Carbon::now()->startOfWeek()->addWeek()->format('Y-m-d');

        return $fields;
    }
}
